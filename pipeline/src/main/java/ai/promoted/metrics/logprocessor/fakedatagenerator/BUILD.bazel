load("@rules_java//java:defs.bzl", "java_binary")

DEPS = [
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/constant",
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/fakedatagenerator",
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/fakedatagenerator/content",
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/records",
    "@com_github_promotedai_schema_internal_git//proto/common:common_java_proto",
    "@com_github_promotedai_schema_internal_git//proto/event:event_java_proto",
    "@com_github_promotedai_schema_internal_git//proto/promotion:promotion_java_proto",
    "@com_google_protobuf//:protobuf_java",
    "@maven//:com_fasterxml_jackson_core_jackson_core",
    "@maven//:com_fasterxml_jackson_core_jackson_databind",
    "@maven//:com_google_code_findbugs_jsr305",
    "@maven//:org_apache_commons_commons_lang3",
    "@maven//:com_google_guava_guava",
    "@maven//:org_apache_kafka_kafka_clients",
    "@maven_nonflink//:org_apache_logging_log4j_log4j_slf4j_impl",
    "@maven_nonflink//:org_apache_logging_log4j_log4j_layout_template_json",
    "@maven_nonflink//:org_apache_logging_log4j_log4j_api",
    "@maven_nonflink//:org_apache_logging_log4j_log4j_core",
    "@maven//:info_picocli_picocli",
]

java_binary(
    name = "fakedatagenerator",
    srcs = glob(["*.java"]),
    visibility = ["//visibility:public"],
    deps = DEPS,
)

java_binary(
    name = "LogGenerator",
    srcs = glob(["*.java"]),
    main_class = "ai.promoted.metrics.logprocessor.fakedatagenerator.LogGenerator",
    visibility = ["//visibility:public"],
    deps = [
        "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/fakedatagenerator",
    ] + DEPS,
)

java_binary(
    name = "ContentGenerator",
    srcs = glob(["*.java"]),
    main_class = "ai.promoted.metrics.logprocessor.fakedatagenerator.ContentGenerator",
    visibility = ["//visibility:public"],
    deps = [
        "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/fakedatagenerator",
    ] + DEPS,
)

load("@io_bazel_rules_docker//container:container.bzl", "container_image")

container_image(
    name = "LogGenerator_image",
    base = "@java_base//image",
    cmd = ["LogGenerator_deploy.jar"],
    files = [":LogGenerator_deploy.jar"],
    stamp = True,
)

container_image(
    name = "ContentGenerator_image",
    base = "@java_base//image",
    cmd = ["ContentGenerator_deploy.jar"],
    files = [":ContentGenerator_deploy.jar"],
    stamp = True,
)
