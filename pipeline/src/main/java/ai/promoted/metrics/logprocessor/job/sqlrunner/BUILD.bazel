load("@rules_java//java:defs.bzl", "java_binary", "java_library")

DEPS = [
    ":meta_inf_import",
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/job",
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/table",
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/functions/base",
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/common/util",
    # TODO remove this unused avro dependency
    "//pipeline/src/main/java/ai/promoted/metrics/logprocessor/job/contentetl/model:idl",
    "@com_google_protobuf//:protobuf_java",
    "@maven//:org_apache_hadoop_hadoop_common",
    "@maven//:com_google_code_findbugs_jsr305",
    "@maven//:com_google_guava_guava",
    "@maven//:info_picocli_picocli",
    "@maven_neverlink//:org_apache_flink_flink_core",
    "@maven_neverlink//:org_apache_flink_flink_java",
    "@maven_neverlink//:org_apache_flink_flink_streaming_java",
    "@maven_neverlink//:org_apache_flink_flink_table_api_java_uber",
    "@maven_neverlink//:org_apache_logging_log4j_log4j_api",
]

java_import(
    name = "meta_inf_import",
    jars = [":meta_inf.jar"],
)

genrule(
    name = "gen_meta_inf",
    srcs = ["org.apache.flink.table.factories.Factory"],
    outs = ["meta_inf.jar"],
    cmd = """
    mkdir -p META-INF/services
    cp $< META-INF/services/
    jar -cf $@ .
    """,
)

# For tests
java_library(
    name = "sql_runner_job",
    srcs = glob(["*.java"]),
    visibility = ["//pipeline/src/main/java/ai/promoted/metrics/logprocessor:java_and_test"],
    deps = DEPS,
)

java_binary(
    name = "SqlRunnerJob",
    srcs = glob(["*.java"]),
    main_class = "ai.promoted.metrics.logprocessor.job.sqlrunner.SqlRunnerJob",
    visibility = ["//visibility:public"],
    runtime_deps = [":sql_runner_job"],
    deps = DEPS,
)

load("@io_bazel_rules_docker//container:container.bzl", "container_image")
load("@io_bazel_rules_docker//docker/util:run.bzl", "container_run_and_commit_layer")
load("@bazel_skylib//rules:common_settings.bzl", "string_flag")

string_flag(
    name = "image-arch",
    build_setting_default = "x86",
)

config_setting(
    name = "x86",
    flag_values = {
        ":image-arch": "x86",
    },
)

config_setting(
    name = "arm",
    flag_values = {
        ":image-arch": "arm",
    },
)

container_run_and_commit_layer(
    name = "os_upgrade",
    commands = [
        "apt-get update",
        "apt-get -y upgrade",
        "apt-get clean",
        "wget https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-layout-template-json/2.17.1/log4j-layout-template-json-2.17.1.jar -O /opt/flink/lib/log4j-layout-template-json-2.17.1.jar",
        "wget https://repo.maven.apache.org/maven2/org/apache/paimon/paimon-flink-1.17/0.5.0-incubating/paimon-flink-1.17-0.5.0-incubating.jar -O /opt/flink/lib/paimon-flink-1.17-0.5.0-incubating.jar",
        "wget https://repo1.maven.org/maven2/com/github/oshi/oshi-core/6.4.0/oshi-core-6.4.0.jar -O /opt/flink/lib/oshi-core-6.4.0.jar",
        "wget https://repo1.maven.org/maven2/net/java/dev/jna/jna/5.13.0/jna-5.13.0.jar -O /opt/flink/lib/jna-5.13.0.jar",
        "wget https://repo1.maven.org/maven2/net/java/dev/jna/jna-platform/5.13.0/jna-platform-5.13.0.jar -O /opt/flink/lib/jna-platform-5.13.0.jar",
        "wget https://repo.maven.apache.org/maven2/org/apache/flink/flink-shaded-hadoop-2-uber/2.8.3-10.0/flink-shaded-hadoop-2-uber-2.8.3-10.0.jar -O /opt/flink/lib/flink-shaded-hadoop-2-uber-2.8.3-10.0.jar",
        "rm -rf /var/lib/apt/lists/*",
    ],
    # official Flink image drops permissions in the entrypoint
    docker_run_flags = [
        "--entrypoint",
        "/usr/bin/env",
    ],
    image = select({
        ":arm": "@flink-arm//image",
        ":x86": "@flink//image",
        "//conditions:default": "@flink//image",
    }),
)

container_image(
    name = "SqlRunnerJob_image",
    base = select({
        ":arm": "@flink-arm//image",
        ":x86": "@flink//image",
        "//conditions:default": "@flink//image",
    }),
    cmd = ["SqlRunnerJob_deploy.jar"],
    data_path = "/pipeline/src/main/java/ai/promoted/metrics/logprocessor/job/sqlrunner",
    directory = "/opt",
    files = [
        ":SqlRunnerJob_deploy.jar",
    ],
    layers = [
        ":os_upgrade",
    ],
    stamp = True,
    # FLINK_VERSION = this needs updating when we increment the Flink version.
    symlinks = {"/opt/flink/plugins/s3-fs-hadoop/flink-s3-fs-hadoop-1.17.1.jar": "/opt/flink/opt/flink-s3-fs-hadoop-1.17.1.jar"},
)
